def ADB_PATH = "${android.getSdkDirectory()}/platform-tools/adb"
project.ext.appInfo.each {entry ->
    def name = entry.key
    def packageName = entry.value
    def stopTask = tasks.create(name: "stop$name", type: Exec) {
        doFirst { println "Stop $name..." }
        executable = ADB_PATH
        args = ['shell', "am force-stop $packageName"]
    }
    def startTask = tasks.create(name: "start$name", dependsOn: [stopTask], type: Exec) {
        doFirst { println "Start $name..." }
        executable = ADB_PATH
        args = ['shell', "sleep 3;am start \$(cmd package resolve-activity --brief ${packageName} | tail -n 1)"]
    }
    def debugXposedTask = tasks.create(name: "debug${name}Xposed", dependsOn: ["installDebug", stopTask], type: Exec) {
        executable = ADB_PATH
        args = ['shell', "package=${android.defaultConfig.applicationId}&& cp -f \$(pm path \$package| cut -d: -f2) /data/local/tmp/\$package.apk && chmod 777 /data/local/tmp/\$package.apk"]
    }
    debugXposedTask.finalizedBy(startTask)
    def debugRiruTask = tasks.create(name: "debug${name}Riru", dependsOn: ["mergeDexDebug"], type: Exec) {
        def classDexPath = new File(project.buildDir, "intermediates/dex/debug/mergeDexDebug/classes.dex").absolutePath
        executable = ADB_PATH
        args = ['push', classDexPath, "/data/local/tmp/libriru-module-xfingerprint-pay-${name.toLowerCase()}.debug.dex"]
        doLast {
            exec {
                executable = ADB_PATH
                args = ["shell", "chmod", "a-w", "/data/local/tmp/libriru-module-xfingerprint-pay-${name.toLowerCase()}.debug.dex"]
            }
        }
    }
    debugRiruTask.finalizedBy(startTask)
    def debugZygiskTask = tasks.create(name: "debug${name}Zygisk", dependsOn: ["mergeDexDebug"], type: Exec) {
        def classDexPath = new File(project.buildDir, "intermediates/dex/debug/mergeDexDebug/classes.dex").absolutePath
        executable = ADB_PATH
        args = ['push', classDexPath, "/data/local/tmp/libzygisk-module-xfingerprint-pay-${name.toLowerCase()}.debug.dex"]
        doLast {
            exec {
                executable = ADB_PATH
                args = ["shell", "chmod", "a-w", "/data/local/tmp/libzygisk-module-xfingerprint-pay-${name.toLowerCase()}.debug.dex"]
            }
        }
    }
    debugZygiskTask.finalizedBy(startTask)
}

android.applicationVariants.all { variant ->
    variant.getCompileConfiguration().resolutionStrategy {
        if (variant.install != null) {
            variant.install.doLast {
                println "Running app..."
                exec {
                    executable = ADB_PATH
                    args = ['shell', "monkey -p ${variant.applicationId} -c android.intent.category.LAUNCHER 1"]
                }
            }
        }
        variant.outputs.each { output ->
            def apkName = "xposed.${android.defaultConfig.applicationId}.wechatfp.${android.defaultConfig.versionName}.${variant.buildType.name}.apk"
            output.outputFileName = apkName
        }
    }
}
