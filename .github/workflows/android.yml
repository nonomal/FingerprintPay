name: Android CI

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH
          utcOffset: "+08:00"
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.SIGNING_STORE_BASE64 }}
        run: echo $ENCODED_STRING | base64 -di > app/keystore.jks
      - uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '17'
          architecture: x64
      - uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '15'
          architecture: x64
          targets: 'JAVA_HOME_15'
      - name: Build Riru modules
        run: cd ./module && bash ./make.sh
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean ":app:assembleRelease"
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      - name: Upload Apk
        uses: actions/upload-artifact@v2.2.0
        with:
          name: xposed.${{ steps.current-time.outputs.formattedTime }}
          path: app/build/outputs/apk/release/*.apk
      - name: Upload Riru Modules
        uses: actions/upload-artifact@v2.2.0
        with:
          name: magisk.${{ steps.current-time.outputs.formattedTime }}
          path: |
            module/build/release/*.zip
            !module/build/release/*-all-*.zip
      - name: Assign release version from version.properties to Env variable
        run: |
          cat ./app/build.gradle| grep versionName | sed -E 's/.+"(.+)".*/release_version=\1/g' >> $GITHUB_ENV
      - name: Echo release version from  Env variable
        run: |
          echo "${{ env.release_version }}"
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release draft
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: "${{ env.release_version }}"
          tag_name: "${{ env.release_version }}-ci"
          files: |
            app/build/outputs/apk/release/*.apk
            module/build/release/*.zip
          body: "[Github Action](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})"
      - name: Upload artifacts - Xposed
        uses: Wandalen/wretry.action@master
        with:
          action: bxb100/action-upload@main
          with: |
            provider: webdav
            provider_options: |
              endpoint=${{secrets.WEBDAV_ADDRESS}}
              username=${{secrets.WEBDAV_USERNAME}}
              password=${{secrets.WEBDAV_PASSWORD}}
              root=/${{ env.release_version }}-dev
            include: |
              app/build/outputs/apk/release/*.apk
          attempt_limit: 3
          attempt_delay: 0
      - name: Upload artifacts - Zygisk
        uses: Wandalen/wretry.action@master
        with:
          action: bxb100/action-upload@main
          with: |
            provider: webdav
            provider_options: |
              endpoint=${{secrets.WEBDAV_ADDRESS}}
              username=${{secrets.WEBDAV_USERNAME}}
              password=${{secrets.WEBDAV_PASSWORD}}
              root=/${{ env.release_version }}-dev
            include: |
              module/build/release/zygisk-*.zip
          attempt_limit: 3
          attempt_delay: 0
      - name: Upload artifacts - Riru
        uses: Wandalen/wretry.action@master
        with:
          action: bxb100/action-upload@main
          with: |
            provider: webdav
            provider_options: |
              endpoint=${{secrets.WEBDAV_ADDRESS}}
              username=${{secrets.WEBDAV_USERNAME}}
              password=${{secrets.WEBDAV_PASSWORD}}
              root=/${{ env.release_version }}-dev
            include: |
              module/build/release/riru-*.zip
          attempt_limit: 3
          attempt_delay: 0